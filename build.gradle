plugins {
    id "de.undercouch.download" version "4.0.0"
}

apply from: 'dependencies.gradle'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

group 'com.guige'
version '1.0-SNAPSHOT'

repositories {
    flatDir {
        dirs externalDependenciesDirectory
    }
    mavenCentral()
}

configurations {
    codeAnalysisLibs

    // Some our dependencies should be included *before* dependencies from IDEA (e.g. junit, jackson-databind). IDEA
    // has some versions of these dependencies that sometimes break tests (see comments for particular dependencies
    // included into this configuration for details).
    priorityTestCompile
}

dependencies {
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.1.0'
    compile 'org.apache.commons:commons-lang3:3.11'
    compile 'info.picocli:picocli:4.5.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.5.0'

    // Dependencies of ':com.microsoft.alm.client:0.4.3-SNAPSHOT'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.1'

    // Microsoft ALM libraries that are managed by the dependencies.gradle script
    compile ':com.microsoft.alm.client:0.4.3-SNAPSHOT'
    compile ':com.microsoft.alm.client.build2:0.4.3-SNAPSHOT'
    compile ':com.microsoft.alm.client.core:0.4.3-SNAPSHOT'
    compile ':com.microsoft.alm.client.distributedtask:0.4.3-SNAPSHOT'
    compile ':com.microsoft.alm.client.sourcecontrol:0.4.3-SNAPSHOT'
    compile ':com.microsoft.alm.client.workitemtracking:0.4.3-SNAPSHOT'

    codeAnalysisLibs 'com.google.code.findbugs:annotations:3.0.0'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
    compile group: 'org.glassfish.jersey.connectors', name: 'jersey-apache-connector', version: '2.28'
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.28'
    compile (group: 'org.apache.httpcomponents', name: 'httpclient-win', version: '4.4.1') {
        exclude group: 'net.java.dev.jna', module: 'jna'
        exclude group: 'net.java.dev.jna', module: 'jna-platform'
    }

    compile (group: 'com.microsoft.alm', name: 'auth-core', version: '0.6.4') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // IDEA has two other junit versions embedded into it: 3.8.1 (junit.jar) and 4.12 (junit-4.12.jar). We need our
    // version to take priority.
    priorityTestCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        compileClasspath += configurations.codeAnalysisLibs

        java {
            srcDir 'src'
        }

        resources {
            srcDir 'resources'
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

//打jar包需要的配置
jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
                "Main-Class": "com.guige.tfvc.Program"   //主函数的名称
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    into('assets') {
        from 'assets'
    }
}

/**
 * Open source prep
 */
checkstyle {
    toolVersion = "6.1"
    ignoreFailures = true
    configFile = file "${rootDir}/config/checkstyle/custom-rules.xml"
    configProperties = [
            'checkstyle.java.header': "${rootDir}/config/checkstyle/java.header"
    ]
}

pmd {
    toolVersion = "6.0.0"
    ignoreFailures = true
    ruleSetFiles = files "${rootDir}/config/pmd/custom-pmd-rules.xml"
}
